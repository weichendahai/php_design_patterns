全面梳理SQL和NoSQL数据库的技术差别
http://www.36dsj.com/archives/16986

创新的背后往往会刺激痛苦。这一点在PDD(我们亲切地称为痛处驱动开发)软件开发领域尤为真实。
从上世纪80年代以来，我们就都知道如何处理关系型数据——只要把数据放到关系型数据库管理系统(RDBMS)中，就可以使用SQL语句操作数据。
然而，在过去几年来，我们的行业采纳NoSQL数据库的趋势在增长，数据不见得都在关系型数据库中存储了。

诚然，在互联网上有成千上万关于选择SQL还是NoSQL的辩论。但是，这两者是不是必须站在对立面战斗呢？
如果你选择一种或另一种，你知道为什么做选择，知道各自有何潜在益处吗？
本文简要地讨论了SQL和NoSQL两种方法最常见的优点和缺点，包括简单的比较和开发者考虑的因素。
像别的一些话题一样，这个问题没有对错，永远正确的经典答案依然是：具体问题具体分析。

1. 数据表VS.数据集

关系型和非关系型数据库的主要差异是数据存储的方式。
关系型数据天然就是表格式的，因此存储在数据表的行和列中。数据表可以彼此关联协作存储，也很容易提取数据。
与其相反，非关系型数据不适合存储在数据表的行和列中，而是大块组合在一起。非关系型数据通常存储在数据集中，
就像文档、键值对或者图结构。你的数据及其特性是选择数据存储和提取方式的首要影响因素。

2. 预定义结构VS.动态结构

关系型数据通常对应于结构化数据，因为数据表都有预定义好的结构(列的定义)，结构描述了数据的形式和内容。
这一点对数据建模至关重要，你必须“第一时间先把结构定义好”。虽然预定义结构带来了可靠性和稳定性，但是已经存入数据的表结构要修改就非常痛苦了。
另一方面，非关系型数据基于动态结构，通常适用于非结构化数据。非关系型数据可以很容易适应数据类型和结构的变化，因为动态结构本身就支持这一点。

3. 存储规范化VS存储代价

关系型数据库的数据存储是为了更高的规范性，把数据分隔成最小的逻辑表(关系表)以避免重复，获得最精简的空间利用。
虽然数据规范性会使数据管理更清晰，但它通常也会带来一点点复杂性，尤其是单个操作可能涉及多个关系表的时候，数据管理就有点麻烦。
另外，更精简的空间利用通常可以节约宝贵的数据存储，但是在当今世界我们基本可以认为存储的代价(磁盘空间)是微不足道的。
而非关系型数据存储在平面数据集中，数据经常可能存在重复。单个数据库很少被分隔开，而是存储成一个整体，这样是为了整块数据更容易读写。

4. 纵向扩容VS横向扩容

SQL和NoSQL数据库最大的差别可能是在扩展方式上，要支持日益增长的需求当然要扩展。
要支持更多并发量，SQL数据库是纵向扩展，也就是说提高处理能力，使用速度更快速的计算机，这样处理相同的数据集就更快了。
因为数据存储在关系表中，操作的性能瓶颈可能涉及很多个表，这都需要通过提高计算机性能来客服。虽然SQL数据库有很大扩展空间，但最终肯定会达到纵向扩展的上限。
而NoSQL数据库是横向扩展的。非关系型数据存储天然就是分布式的，NoSQL数据库的扩展可以通过给资源池添加更多普通的数据库服务器(节点)来分担负载。

5. 结构化查询VS非结构化查询

关系型数据库通过所谓结构化查询语言(也就是我们常说的SQL)来操作数据。SQL支持数据库CRUD(增加，查询，更新，删除)操作的功能非常强大，是业界标准用法。
非关系型数据库以块(像文档一样)为单元操纵数据，使用所谓的非结构化查询语言(UnQL)，它是没有标准的，因数据库提供商的不同而不同。
关系型表中主键的概念对应非关系存储中的文档Id。SQL数据库使用预定义优化方式(比如列索引定义)帮助加速查询操作，而NoSQL数据库采用更简单而精确的数据访问模式。

6. 映射VS本地化

SQL和NoSQL数据存储的选择还取决于开发人员，尽管这个因素影响不大。
采用面向对象编程语言的开发人员通常会同时操作一个或多个数据实体(包括嵌套数据、列表和数组的复杂结构)，把数据传递给应用程序用户界面。
要是讨论到底层数据库，事情就并不总是那么公平合理了。在关系型存储中，数据实体通常需要分成多个部分进行规范化，然后分开存储到多个关系型表中精简存储。
幸运的是，这是一个长期存在的问题，大部分编程平台都有相应的简单解决方案，比如ORM层(对象关系映射)。
ORM是位于关系型数据源和开发者使用的面向对象数据实体之间的一个映射层。然而，对于非关系型存储，不需要规范化数据，复杂数据实体可以整体存放在独立单元中。
应用程序中使用的对象通常序列化为JSon串，存储在NoSQL数据库的JSon文档中。

7. 事务性VS纯扩展性

如果你的数据操作需要高事务性或者复杂数据查询需要控制执行计划，那么传统的SQL数据库从性能和稳定性方面考虑是你的最佳选择。
SQL数据库支持对事务原子性细粒度控制，并且易于回滚事务。
虽然NoSQL数据库也可以使用事务操作，但它们真正闪亮的价值是在操作的扩展性和大数据量处理方面。

8. ACID VS CAP

SQL 数据库久负盛名的价值就是通过所谓的ACID属性(原子性，一致性，隔离性，持久性)保证数据完整性，大部分关系型存储供应商都支持ACID。
我们的目标是支持隔离不可分割的事务，其变化是持久的，数据也保持一致状态。
而NoSQL数据库是让你在CAP(一致性，可用性，分区容忍度)中的任意两项中选择，因为在基于节点的分布式系统中，很难做到三项都满足。

9. 数据VS大数据

SQL数据库可以可靠地存储和处理数据，而NoSQL最大的优势是在应对大数据方面，也就是由我们社会或者计算机每天产生的大量非结构化的数据实体。
NoSQL用无模式方式做数据管理，所以其横向扩展潜力是无限的，这可能是深度处理大数据捕获、管理、检索、分析和可视化的唯一有效途径。

10. 数据记录VS物联网和人联网

关系数据库在关注数据规范化和保证性能的基础上精简存储。但是近年来，我们产生数据的速度远大于关系型存储能满足存储的能力增长。
刺激数据如此迅猛增长的原因是：巨大量的用户数和物联网。连接到互联网的用户在成倍增加，在同步使用我们的应用。
由于大量移动设备数据传感设备接入互联网，机器产生的数据量也大幅增加。因此企业必须寻求NoSQL技术及基础架构来处理持续涌入的半结构化和非结构化数据。

11. 内部部署VS云计算

云计算现在已经无处不在了，它兼具SQL和NoSQL数据库的益处。云环境中的关系型存储通常是以服务形式提供的，是可复制、高可用性且分布式的，
极大地提高了横向扩展能力。托管于云服务中的NoSQL数据库也天然享有自动分片的好处，可以阶段性地灵活弹性处理，集成高速缓存和巨大的计算能力来捕获、存储和分析大数据。

12. 付费VS开源

有一种看法认为，SQL数据库大多数比较昂贵，而NoSQL数据库通常都是开源的。事实上，两种类型数据库都有开源的和商业的。常见的SQL 数据库有微软公司的SQL Server，MySQL，SQLite，Oracle和PostGres。流行的NoSQL数据库有Couchbase，MongoDB，Redis，BigTable和RavenDB。

结论

就像Neo之于Matrix，你可以选择。幸福的无知和幻想或者接受残酷的现实。
但是，盲目选择使用SQL还是NoSQL技术，或者根据大众需求选择都是在幻想有魔法会自动选择合适的方案。
SQL和NoSQL这两者都有各自的优缺点，选择正确的架构取决于你构建应用的需求。
传统SQL数据库依然非常强大，可以可靠地处理你的事务性需求并保持完整性。
只有在你接近关系数据库局限性边缘时，或者你的数据处理量浩如烟海时，操作扩展需要更加分布式的系统时，才考虑NoSQL方案。
考虑这些因素之后再做选择，你就可以变成释放你的数据构建下一代应用令人叹为观止的神人。

//===============o

http://noican.blog.51cto.com/4081966/1355316o
1. SQL数据库被称为关系型数据库（RDBMS），而NoSQL数据库被称为非关系型数据库或分布式数据库。

2. SQL数据库是基于表的数据库，而NoSQL数据库则有基于文档的，键值对的，图形的或基于列式存储的数据库。

3. SQL数据库的数据结构必须事先先定义好，而NoSQL数据库的数据是动态无结构的。

4. SQL数据库的负载能力是以增加硬件配置的垂直扩展方式来增加的，而NoSQL数据库的负载能力可以通过增加数据库服务器的数量来增加（属于水平扩展）。

5. SQL数据库是使用SQL（结构化查询语言）对数据进行定义和操作的，功能强大，语法统一。而NoSQL数据库是使用UnQL（无结构查询语言），
其操作的对象主要是存储在集合中的文档，但UnQL语法不统一，不同的NoSQL数据库语法各有不同。

6. 常见的SQL数据库有：MySql，Oracle，Postgres，Sqlite，MS-SQL等。NoSQL常见的有：MongoDB，BigTable，Redis，Hbase，Neo4j等。

7. 对于复杂的查询：SQL非常的擅长，而NoSQL则不擅长。因为NoSQL并没有执行复杂查询的标准接口。相对于SQL的强大查询能力，NoSQL的查询能力就显得有点捉襟见肘。

8. 对于所能存储的数据类型：SQL数据库并不太适合分层次的数据存储。但是，NoSQL数据库则可以很好的存储分层次的数据，因为它是以键值对的形式存储数据的，类似与JSON数据。NoSQL数据库更倾向用于大数据。例如Hbase就是一个很好的例子。

9. 对于基于大量事务的应用程序：SQL数据库非常适合，因为它更加稳定并且可以保证数据的原子性和一致性。而NoSQL对事务的处理能力有限。

10. 在文档支持方面：所有SQL数据库的厂家对其数据库产品都有很好的支持，并且有许多专家可以帮你部署大型的SQL数据库扩展。而NoSQL现在仅有社区的支持，而可以帮助你部署大型NoSQL数据库扩展的专家也很有限。

11. 在属性方面：SQL数据库遵循ACID（即，原子性，一致性，隔离性，持久性）属性，而NoSQL数据库遵循的是CAP定理（即，一致性，可用性，分区容忍性）。

12. 对于数据库的分类：对于SQL数据库，基于商业渠道SQL数据库可分为开源或闭源产品。对于NoSQL数据库，基于存储数据的基本方式可分为图形数据库，键——值数据库，文档数据库，列式数据库，XML数据库。

